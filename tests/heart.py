import time
from machine import UART, Pin, I2C, Timer, ADC
from ssd1306 import SSD1306_I2C
import framebuf
button_right = Pin(9, Pin.IN, Pin.PULL_UP) #SW0
button_left = Pin(7, Pin.IN, Pin.PULL_UP) #SW2

i2c = I2C(1, scl=Pin(15), sda=Pin(14), freq=400000)
oled_width = 128
oled_height = 64
oled = SSD1306_I2C(oled_width, oled_height, i2c)

# Create multiple heart shapes for animation (different sizes)

heart_1 = bytearray([  # Smallest heart (32x32)
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0xF0, 0x0F, 0x00,
    0x01, 0xF8, 0x1F, 0x80,
    0x03, 0xFC, 0x3F, 0xC0,
    0x07, 0xFE, 0x7F, 0xE0,
    0x0F, 0xFF, 0xFF, 0xF0,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x0F, 0xFF, 0xFF, 0xF0,
    0x07, 0xFF, 0xFF, 0xE0,
    0x03, 0xFF, 0xFF, 0xC0,
    0x01, 0xFF, 0xFF, 0x80,
    0x00, 0xFF, 0xFF, 0x00,
    0x00, 0x7F, 0xFE, 0x00,
    0x00, 0x3F, 0xFC, 0x00,
    0x00, 0x1F, 0xF8, 0x00,
    0x00, 0x0F, 0xF0, 0x00,
    0x00, 0x07, 0xE0, 0x00,
    0x00, 0x03, 0xC0, 0x00,
    0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
])

heart_2 = bytearray([  # Medium heart (32x32)
    0x00, 0x00, 0x00, 0x00,
    0x00, 0xF0, 0x0F, 0x00,
    0x01, 0xF8, 0x1F, 0x80,
    0x03, 0xFC, 0x3F, 0xC0,
    0x07, 0xFE, 0x7F, 0xE0,
    0x0F, 0xFF, 0xFF, 0xF0,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x7F, 0xFF, 0xFF, 0xFE,
    0x7F, 0xFF, 0xFF, 0xFE,
    0x7F, 0xFF, 0xFF, 0xFE,
    0x7F, 0xFF, 0xFF, 0xFE,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x0F, 0xFF, 0xFF, 0xF0,
    0x07, 0xFF, 0xFF, 0xE0,
    0x03, 0xFF, 0xFF, 0xC0,
    0x01, 0xFF, 0xFF, 0x80,
    0x00, 0xFF, 0xFF, 0x00,
    0x00, 0x7F, 0xFE, 0x00,
    0x00, 0x3F, 0xFC, 0x00,
    0x00, 0x1F, 0xF8, 0x00,
    0x00, 0x0F, 0xF0, 0x00,
    0x00, 0x07, 0xE0, 0x00,
    0x00, 0x03, 0xC0, 0x00,
    0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
])

heart_3 = bytearray([  # Largest heart (32x32)
    0x01, 0xF8, 0x1F, 0x80,
    0x03, 0xFC, 0x3F, 0xC0,
    0x07, 0xFE, 0x7F, 0xE0,
    0x0F, 0xFF, 0xFF, 0xF0,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x7F, 0xFF, 0xFF, 0xFE,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF,
    0x7F, 0xFF, 0xFF, 0xFE,
    0x7F, 0xFF, 0xFF, 0xFE,
    0x3F, 0xFF, 0xFF, 0xFC,
    0x1F, 0xFF, 0xFF, 0xF8,
    0x0F, 0xFF, 0xFF, 0xF0,
    0x07, 0xFF, 0xFF, 0xE0,
    0x03, 0xFF, 0xFF, 0xC0,
    0x01, 0xFF, 0xFF, 0x80,
    0x00, 0xFF, 0xFF, 0x00,
    0x00, 0x7F, 0xFE, 0x00,
    0x00, 0x3F, 0xFC, 0x00,
    0x00, 0x1F, 0xF8, 0x00,
    0x00, 0x0F, 0xF0, 0x00,
    0x00, 0x07, 0xE0, 0x00,
    0x00, 0x03, 0xC0, 0x00,
    0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
])
# Create framebuffers for each heart
fbuf1 = framebuf.FrameBuffer(heart_1, 32, 32, framebuf.MONO_HLSB)
fbuf2 = framebuf.FrameBuffer(heart_2, 32, 32, framebuf.MONO_HLSB)
fbuf3 = framebuf.FrameBuffer(heart_3, 32, 32, framebuf.MONO_HLSB)

def draw_frame(fbuf, glow=False):
    oled.fill(0)  # Clear display
    
    # Center position for 32x32 heart
    x = (128 - 32) // 2
    y = (64 - 32) // 2
    
    # Draw the heart
    oled.blit(fbuf, x, y)
    
    
    oled.show()

try:
    while True:
        # Heart beat animation sequence
        
        # Normal size
        draw_frame(fbuf1)
        time.sleep(0.1)
        
        # First expansion
        draw_frame(fbuf2)
        time.sleep(0.1)
        
        # Maximum size with glow
        draw_frame(fbuf3, True)
        time.sleep(0.05)
        
        # Contract slightly
        draw_frame(fbuf2, True)
        time.sleep(0.05)
        
        # Second beat (quicker)
        draw_frame(fbuf3, True)
        time.sleep(0.05)
        draw_frame(fbuf2)
        time.sleep(0.05)
        
        # Return to normal
        draw_frame(fbuf1)
        
        # Wait before next beat
        time.sleep(0.8)

except KeyboardInterrupt:
    oled.fill(0)
    oled.show()
